{"version":3,"file":"config.js","sources":["src/index.js"],"sourcesContent":["import { join } from 'path';\r\nimport { userInfo } from 'os';\r\nimport { read, write, trymore } from 'crypto-io-utils';\r\nimport uuid4 from 'uuid/v4';\r\nimport uuid5 from 'uuid/v5';\r\nlet file = {};\r\nlet appdataPath = '';\r\nlet configPath;\r\n\r\nexport const defaultConfig = {\r\n  \"keys\": {\r\n    \"public\": \"\",\r\n    \"private\": \"\"\r\n  },\r\n  \"appdata\": {\r\n    \"location\": \"%HOMEDIR%\",\r\n    \"folder\": \".revolutionlabs\",\r\n    \"name\": \".labsconfig\"\r\n  },\r\n  \"mining\": {\r\n    \"pool\": \"labs.pool\",\r\n    \"workers\": [\r\n      uuid5('labs.worker', uuid4())\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const handleAppDataPath = appdata => {\r\n  if (appdata.location === '%HOMEDIR%' || appdata.location === '%homedir%') {\r\n    appdata.location = userInfo().homedir;\r\n  }\r\n  if (!appdata.name) {\r\n    appdata.name = '.labsconfig';\r\n  }\r\n  return join(appdata.location, appdata.folder, appdata.name);\r\n}\r\n\r\nexport default (async () => {\r\n  try {\r\n    const result = await trymore(read, [\r\n      '.labsconfig|json',\r\n      `${join(userInfo().homedir, '.revolutionlabs', '.labsconfig')}|json`\r\n    ]);\r\n    file = result[1];\r\n    configPath = result[0];\r\n    file.appdataPath = handleAppDataPath(file.appdata);\r\n  } catch (error) {\r\n    console.log(error);\r\n    if (error.code === 'ENOENT') {\r\n      file = defaultConfig;\r\n      file.appdataPath = handleAppDataPath(file.appdata);\r\n      await write(file.appdataPath, JSON.stringify(file, null, 2));\r\n    } else {\r\n      console.error(error);\r\n      console.log(`Fix your .labsconfig file or run 'labs --init' using the cli`);\r\n      process.exit();\r\n    };\r\n  }\r\n  const obj = file;\r\n  obj.set = (property, value) => {\r\n    obj[property] = value;\r\n    file[property] = value;\r\n    return write(configPath, JSON.stringify(file, null, 2));\r\n  };\r\n  return obj;\r\n})();\r\n"],"names":["file","configPath","defaultConfig","uuid5","uuid4","handleAppDataPath","appdata","location","userInfo","homedir","name","join","folder","result","trymore","read","appdataPath","error","log","code","write","JSON","stringify","exit","obj","set","property","value"],"mappings":";;;;;;;;;;;;AAKA,IAAIA,OAAO,EAAX;AACA,AACA,IAAIC,UAAJ;AAEA,AAAO,MAAMC,gBAAgB;UACnB;cACI,EADJ;eAEK;GAHc;aAKhB;gBACG,WADH;cAEC,iBAFD;YAGD;GARiB;YAUjB;YACA,WADA;eAEG,CACTC,MAAM,aAAN,EAAqBC,OAArB,CADS;;CAZR;AAoBP,AAAO,MAAMC,oBAAoBC,WAAW;MACtCA,QAAQC,QAAR,KAAqB,WAArB,IAAoCD,QAAQC,QAAR,KAAqB,WAA7D,EAA0E;YAChEA,QAAR,GAAmBC,cAAWC,OAA9B;;MAEE,CAACH,QAAQI,IAAb,EAAmB;YACTA,IAAR,GAAe,aAAf;;SAEKC,UAAKL,QAAQC,QAAb,EAAuBD,QAAQM,MAA/B,EAAuCN,QAAQI,IAA/C,CAAP;CAPK;AAUP,YAAe,CAAC,YAAY;MACtB;UACIG,SAAS,MAAMC,sBAAQC,kBAAR,EAAc,CACjC,kBADiC,EAEhC,GAAEJ,UAAKH,cAAWC,OAAhB,EAAyB,iBAAzB,EAA4C,aAA5C,CAA2D,OAF7B,CAAd,CAArB;WAIOI,OAAO,CAAP,CAAP;iBACaA,OAAO,CAAP,CAAb;SACKG,WAAL,GAAmBX,kBAAkBL,KAAKM,OAAvB,CAAnB;GAPF,CAQE,OAAOW,KAAP,EAAc;YACNC,GAAR,CAAYD,KAAZ;QACIA,MAAME,IAAN,KAAe,QAAnB,EAA6B;aACpBjB,aAAP;WACKc,WAAL,GAAmBX,kBAAkBL,KAAKM,OAAvB,CAAnB;YACMc,oBAAMpB,KAAKgB,WAAX,EAAwBK,KAAKC,SAAL,CAAetB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAxB,CAAN;KAHF,MAIO;cACGiB,KAAR,CAAcA,KAAd;cACQC,GAAR,CAAa,8DAAb;cACQK,IAAR;;;QAGEC,MAAMxB,IAAZ;MACIyB,GAAJ,GAAU,CAACC,QAAD,EAAWC,KAAX,KAAqB;QACzBD,QAAJ,IAAgBC,KAAhB;SACKD,QAAL,IAAiBC,KAAjB;WACOP,oBAAMnB,UAAN,EAAkBoB,KAAKC,SAAL,CAAetB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAlB,CAAP;GAHF;SAKOwB,GAAP;CA3Ba,GAAf;;;;"}